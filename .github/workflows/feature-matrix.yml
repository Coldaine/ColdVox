name: Feature Matrix Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: feature-matrix-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  # Simple test for app crate only - it has the complex features
  app-features:
    name: Test coldvox-app - ${{ matrix.features.name }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        features:
          - name: "default"
            flags: ""
          - name: "no-default"
            flags: "--no-default-features"
          - name: "silero-only"
            flags: "--no-default-features --features silero"
          - name: "text-injection-only"
            flags: "--no-default-features --features text-injection"
          - name: "level3-only"
            flags: "--no-default-features --features level3"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.1.7
        
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
            key: ${{ runner.os }}-cargo-coldvox-app-${{ matrix.features.name }}
            cache-on-failure: true
      
      # Platform-specific setup (Linux only)
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libdbus-1-dev \
            pkg-config \
            libssl-dev \
            libxcb1-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev
      
      # Build the package with specified features
      - name: Build package
        run: cargo build -p coldvox-app ${{ matrix.features.flags }}
      
      # Run tests
      - name: Run tests
        run: cargo test -p coldvox-app ${{ matrix.features.flags }}
      
      # Run clippy for additional checks
      - name: Run clippy
        run: cargo clippy -p coldvox-app ${{ matrix.features.flags }} -- -D warnings
        continue-on-error: true

  # Quick smoke test for PRs
  smoke-test:
    name: Quick Smoke Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.1.7
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libdbus-1-dev pkg-config
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Build with default features
        run: cargo build --workspace
      
      - name: Test with default features
        run: cargo test --workspace
      
      - name: Build with no default features
        run: cargo build --workspace --no-default-features
      
      - name: Test with no default features
        run: cargo test --workspace --no-default-features
      
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings