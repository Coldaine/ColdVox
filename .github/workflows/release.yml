name: Release Automation

on:
  pull_request:
    types: [closed]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write
  issues: write # allow labeling the release PR

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-plz:
    name: Release Please
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.7
        with:
          fetch-depth: 0
          token: ${{ github.token }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - name: Install release-plz
        run: cargo install release-plz --locked
      - name: Run release-plz
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          release-plz release-pr --git-token "$GITHUB_TOKEN"

  # Auto-release when the Release PR is merged into main
  release:
    name: Create Release
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.7
        with:
          fetch-depth: 0
          # Ensure we operate against the main branch after merge
          ref: main
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
      - name: Install release-plz
        run: cargo install release-plz --locked
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          release-plz release --git-token "$GITHUB_TOKEN"
