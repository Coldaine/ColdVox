name: Vosk Integration Tests

on:
  # Run on PRs that modify STT-related code
  pull_request:
    paths:
      - "crates/coldvox-stt/**"
      - "crates/coldvox-stt-vosk/**"
      - "crates/app/**"
      - "examples/vosk_*.rs"
      - ".github/workflows/vosk-integration.yml"
  # Weekly scheduled run
  schedule:
    - cron: "0 0 * * 0"
  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: vosk-${{ github.ref }}
  cancel-in-progress: false

jobs:
  vosk-tests:
    name: Vosk STT Integration
    runs-on: ${{ contains(github.event.inputs.runner, 'self-hosted') && fromJSON('["self-hosted", "Linux", "X64", "fedora", "nobara"]') || 'ubuntu-latest' }}
    timeout-minutes: 30
    env:
      RUST_TEST_TIME_UNIT: 10000
      RUST_TEST_TIME_INTEGRATION: 30000

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4.1.7
        with:
          fetch-depth: 0

      - name: Setup ColdVox
        uses: ./.github/actions/setup-coldvox

      - name: Setup Vosk Model Cache
        run: |
          # Export LD_LIBRARY_PATH for Vosk
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          sudo ldconfig
          
          # Use pre-cached models from permanent cache location
          CACHE_DIR="/home/coldaine/ActionRunnerCache/vosk-models"
          MODEL_DIR="models"
          
          mkdir -p $MODEL_DIR
          
          # Link the small model for tests (remove existing if present)
          if [ -d "$CACHE_DIR/vosk-model-small-en-us-0.15" ]; then
            rm -rf "$MODEL_DIR/vosk-model-small-en-us-0.15"
            ln -sf "$CACHE_DIR/vosk-model-small-en-us-0.15" "$MODEL_DIR/"
            echo "✅ Linked cached vosk-model-small-en-us-0.15"
          else
            echo "❌ Error: Vosk model not found in cache at $CACHE_DIR"
            exit 1
          fi
          
          # Link the production model if tests need it
          if [ -d "$CACHE_DIR/vosk-model-en-us-0.22" ]; then
            rm -rf "$MODEL_DIR/vosk-model-en-us-0.22"
            ln -sf "$CACHE_DIR/vosk-model-en-us-0.22" "$MODEL_DIR/"
            echo "✅ Linked cached vosk-model-en-us-0.22"
          fi
          
          ls -la $MODEL_DIR/

      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked

      - name: Build with Vosk
        run: |
          # Build both crates that use Vosk feature
          cargo build --locked -p coldvox-stt-vosk --features vosk
          cargo build --locked -p coldvox-app --features vosk

      - name: Run Vosk tests
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
          RUST_TEST_THREADS: 1 # Vosk may have threading issues
        run: |
          cargo nextest run --locked -p coldvox-stt-vosk --features vosk

      - name: Run end-to-end WAV pipeline test
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          cargo test --locked -p coldvox-app --features vosk test_end_to_end_wav_pipeline -- --ignored --nocapture

      - name: Test Vosk examples
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          # Run Vosk examples if they exist
          if ls examples/vosk_*.rs 1> /dev/null 2>&1; then
            for example in examples/vosk_*.rs; do
              name=$(basename $example .rs)
              cargo run --locked --example $name --features vosk,examples || true
            done
          fi

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: vosk-test-artifacts
          path: |
            target/debug/**/*.log
            logs/
            transcripts/
          retention-days: 7
