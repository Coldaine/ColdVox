name: Vosk Integration Tests

on:
  pull_request:
    paths:
      - "crates/coldvox-stt/**"
      - "crates/coldvox-stt-vosk/**"
      - "crates/app/**"
      - "examples/vosk_*.rs"
      - ".github/workflows/vosk-integration.yml"
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: vosk-${{ github.ref }}
  cancel-in-progress: false

jobs:
  vosk-tests:
    name: Vosk STT Integration
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 30
    env:
      RUST_TEST_TIME_UNIT: 10000
      RUST_TEST_TIME_INTEGRATION: 30000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup ColdVox
        uses: ./.github/actions/setup-coldvox
      - name: Setup Vosk Model Cache (cache-as-contract)
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          sudo ldconfig
          CACHE_DIR="/home/coldaine/ActionRunnerCache/vosk-models"
          MODEL_DIR="models"
          mkdir -p $MODEL_DIR
          if [ ! -d "$CACHE_DIR/vosk-model-small-en-us-0.15" ]; then
            echo "Required model missing: $CACHE_DIR/vosk-model-small-en-us-0.15" >&2
            exit 1
          fi
          rm -rf "$MODEL_DIR/vosk-model-small-en-us-0.15"
            ln -sf "$CACHE_DIR/vosk-model-small-en-us-0.15" "$MODEL_DIR/"
          if [ -d "$CACHE_DIR/vosk-model-en-us-0.22" ]; then
            rm -rf "$MODEL_DIR/vosk-model-en-us-0.22"
            ln -sf "$CACHE_DIR/vosk-model-en-us-0.22" "$MODEL_DIR/"
          fi
          ls -la $MODEL_DIR/
          bash scripts/verify_vosk_model.sh "$MODEL_DIR/vosk-model-small-en-us-0.15"
          if [ -f "models/SHA256SUMS" ]; then
            bash scripts/verify-model-integrity.sh "$MODEL_DIR/vosk-model-small-en-us-0.15" models/SHA256SUMS verify || echo "Checksum verification warning"
          fi
      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked
      - name: Build with Vosk
        run: |
          cargo build --locked -p coldvox-stt-vosk --features vosk
          cargo build --locked -p coldvox-app --features vosk
      - name: Run Vosk tests
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
          RUST_TEST_THREADS: 1
        run: |
          cargo nextest run --locked -p coldvox-stt-vosk --features vosk
      - name: Run end-to-end WAV pipeline test
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          cargo test --locked -p coldvox-app --features vosk test_end_to_end_wav_pipeline -- --ignored --nocapture
      - name: Test Vosk examples
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          if ls examples/vosk_*.rs 1> /dev/null 2>&1; then
            for example in examples/vosk_*.rs; do
              name=$(basename $example .rs)
              cargo run --locked --example $name --features vosk,examples || true
            done
          fi
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: vosk-test-artifacts
          path: |
            target/debug/**/*.log
            logs/
            transcripts/
          retention-days: 7
