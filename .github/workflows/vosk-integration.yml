name: Vosk Integration Tests

on:
  # Run on PRs that modify STT-related code
  pull_request:
    paths:
      - "crates/coldvox-stt/**"
      - "crates/coldvox-stt-vosk/**"
      - "crates/app/**"
      - "examples/vosk_*.rs"
      - ".github/workflows/vosk-integration.yml"
  # Weekly scheduled run
  schedule:
    - cron: "0 0 * * 0"
  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: vosk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  vosk-tests:
    name: Vosk STT Integration
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.7
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            python3 \
            python3-pip \
            wget \
            unzip

      - name: Cache Vosk model
        id: cache-vosk-model
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: models/vosk-model-small-en-us-0.15
          key: vosk-model-small-en-us-0.15
          restore-keys: |
            vosk-model-small-en-us-
            vosk-model-

      - name: Download Vosk model
        if: steps.cache-vosk-model.outputs.cache-hit != 'true'
        run: |
          mkdir -p models
          cd models
          # Retry logic for robustness
          for i in 1 2 3; do
            wget https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip && break
            echo "Download attempt $i failed, retrying..."
            sleep 5
          done
          unzip vosk-model-small-en-us-0.15.zip
          rm vosk-model-small-en-us-0.15.zip

      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked

      - name: Build with Vosk
        run: |
          # Build both crates that use Vosk feature
          cargo build --locked -p coldvox-stt-vosk --features vosk
          cargo build --locked -p app --features vosk

      - name: Run Vosk tests
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
          RUST_TEST_THREADS: 1 # Vosk may have threading issues
        run: |
          cargo nextest run --locked -p coldvox-stt-vosk --features vosk

      - name: Run end-to-end WAV pipeline test
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          cargo test --locked -p app --features vosk test_end_to_end_wav_pipeline -- --ignored --nocapture

      - name: Test Vosk examples
        env:
          VOSK_MODEL_PATH: models/vosk-model-small-en-us-0.15
        run: |
          # Run Vosk examples if they exist
          if ls examples/vosk_*.rs 1> /dev/null 2>&1; then
            for example in examples/vosk_*.rs; do
              name=$(basename $example .rs)
              cargo run --locked --example $name --features vosk,examples || true
            done
          fi

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: vosk-test-artifacts
          path: |
            target/debug/**/*.log
            logs/
            transcripts/
          retention-days: 7
