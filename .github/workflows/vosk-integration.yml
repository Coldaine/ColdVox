name: Whisper Integration Tests

on:
  pull_request:
    paths:
      - "crates/coldvox-stt/**"
      - "crates/app/**"
      - "examples/whisper_*.rs"
      - ".github/workflows/vosk-integration.yml"
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: whisper-${{ github.ref }}
  cancel-in-progress: false

jobs:
  setup-whisper-dependencies:
    name: Setup Whisper Dependencies
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    env:
      WHISPER_MODEL_SIZE: base  # Use base model for integration tests
    outputs:
      model_path: ${{ steps.setup.outputs.model_path }}
      model_size: ${{ steps.setup.outputs.model_size }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Whisper Model
        id: setup
        run: bash scripts/ci/setup-whisper-cache.sh

  whisper-tests:
    name: Whisper STT Integration
    needs: [setup-whisper-dependencies]
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    timeout-minutes: 30
    env:
      RUST_TEST_TIME_UNIT: 10000
      RUST_TEST_TIME_INTEGRATION: 30000
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup ColdVox
        uses: ./.github/actions/setup-coldvox
      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked
      - name: Build with Whisper
        env:
          WHISPER_MODEL_PATH: ${{ needs.setup-whisper-dependencies.outputs.model_path }}
          WHISPER_MODEL_SIZE: ${{ needs.setup-whisper-dependencies.outputs.model_size }}
        run: |
          cargo build --locked -p coldvox-stt --features whisper
          cargo build --locked -p coldvox-app --features whisper
      - name: Run Whisper tests
        env:
          WHISPER_MODEL_PATH: ${{ needs.setup-whisper-dependencies.outputs.model_path }}
          WHISPER_MODEL_SIZE: ${{ needs.setup-whisper-dependencies.outputs.model_size }}
          RUST_TEST_THREADS: 1
        run: |
          cargo nextest run --locked -p coldvox-stt --features whisper
      - name: Run end-to-end WAV pipeline test
        env:
          WHISPER_MODEL_PATH: ${{ needs.setup-whisper-dependencies.outputs.model_path }}
          WHISPER_MODEL_SIZE: ${{ needs.setup-whisper-dependencies.outputs.model_size }}
        run: |
          cargo test --locked -p coldvox-app --features whisper test_end_to_end_wav_pipeline -- --ignored --nocapture
      - name: Test Whisper examples
        env:
          WHISPER_MODEL_PATH: ${{ needs.setup-whisper-dependencies.outputs.model_path }}
          WHISPER_MODEL_SIZE: ${{ needs.setup-whisper-dependencies.outputs.model_size }}
        run: |
          if ls examples/whisper_*.rs 1> /dev/null 2>&1; then
            for example in examples/whisper_*.rs; do
              name=$(basename $example .rs)
              cargo run --locked --example $name --features whisper,examples || true
            done
          fi
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v5
        with:
          name: whisper-test-artifacts
          path: |
            target/debug/**/*.log
            logs/
            transcripts/
          retention-days: 7
