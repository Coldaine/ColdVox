name: Vosk Integration Tests

on:
  pull_request:
    paths:
      - "crates/coldvox-stt/**"
      - "crates/coldvox-stt-vosk/**"
      - "crates/app/**"
      - "examples/vosk_*.rs"
      - ".github/workflows/vosk-integration.yml"
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: vosk-${{ github.ref }}
  cancel-in-progress: false

jobs:
  setup-vosk-dependencies:
    name: Setup Vosk Dependencies
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    outputs:
      model_path: ${{ steps.setup.outputs.model_path }}
      lib_path: ${{ steps.setup.outputs.lib_path }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Vosk Model and Library
        id: setup
        run: bash scripts/ci/setup-vosk-cache.sh

  vosk-tests:
    name: Vosk STT Integration
    needs: [setup-vosk-dependencies]
    runs-on: [self-hosted, Linux, X64, fedora, nobara]
    timeout-minutes: 30
    env:
      RUST_TEST_TIME_UNIT: 10000
      RUST_TEST_TIME_INTEGRATION: 30000
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup ColdVox
        uses: ./.github/actions/setup-coldvox
      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked
      - name: Build with Vosk
        env:
          LD_LIBRARY_PATH: ${{ needs.setup-vosk-dependencies.outputs.lib_path }}
        run: |
          cargo build --locked -p coldvox-stt-vosk --features vosk
          cargo build --locked -p coldvox-app --features vosk
      - name: Run Vosk tests
        env:
          VOSK_MODEL_PATH: ${{ needs.setup-vosk-dependencies.outputs.model_path }}
          LD_LIBRARY_PATH: ${{ needs.setup-vosk-dependencies.outputs.lib_path }}
          RUST_TEST_THREADS: 1
        run: |
          cargo nextest run --locked -p coldvox-stt-vosk --features vosk
      - name: Run end-to-end WAV pipeline test
        env:
          VOSK_MODEL_PATH: ${{ needs.setup-vosk-dependencies.outputs.model_path }}
          LD_LIBRARY_PATH: ${{ needs.setup-vosk-dependencies.outputs.lib_path }}
        run: |
          cargo test --locked -p coldvox-app --features vosk test_end_to_end_wav_pipeline -- --ignored --nocapture
      - name: Test Vosk examples
        env:
          VOSK_MODEL_PATH: ${{ needs.setup-vosk-dependencies.outputs.model_path }}
          LD_LIBRARY_PATH: ${{ needs.setup-vosk-dependencies.outputs.lib_path }}
        run: |
          if ls examples/vosk_*.rs 1> /dev/null 2>&1; then
            for example in examples/vosk_*.rs; do
              name=$(basename $example .rs)
              cargo run --locked --example $name --features vosk,examples || true
            done
          fi
      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: vosk-test-artifacts
          path: |
            target/debug/**/*.log
            logs/
            transcripts/
          retention-days: 7
