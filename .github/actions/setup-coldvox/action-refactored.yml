name: Setup ColdVox Dependencies
description: Install system deps, libvosk, and Rust toolchain
inputs:
  skip-toolchain:
    description: Skip Rust toolchain setup (for jobs with custom toolchain)
    required: false
    default: "false"
  verify-text-injection:
    description: Verify text injection tools (only needed for text_injection_tests)
    required: false
    default: "false"

runs:
  using: composite
  steps:
    # Core dependencies - fail fast if these are missing
    - name: Verify core build dependencies
      shell: bash
      run: |
        set -euo pipefail
        echo "--- Verifying Core Build Dependencies ---"
        
        # Only essentials for Rust compilation
        required_commands="gcc g++ make pkg-config"
        
        failed=0
        for cmd in $required_commands; do
          if ! command -v "$cmd" &> /dev/null; then
            echo "::error::Required build tool '$cmd' not found. Install build-essential."
            failed=1
          fi
        done
        
        # Check for pkg-config dependencies needed for compilation
        required_pkgs="alsa"
        for pkg in $required_pkgs; do
            if ! pkg-config --exists "$pkg"; then
                echo "::error::Required library '$pkg' not found. Install libalsa-devel."
                failed=1
            fi
        done
        
        if [[ $failed -ne 0 ]]; then
          echo "::error::Core build dependencies missing. Cannot compile."
          exit 1
        fi
        
        echo "✅ Core build dependencies verified"

    # Text injection dependencies - warn but don't fail
    - name: Check text injection dependencies
      if: inputs.verify-text-injection == 'true'
      shell: bash
      run: |
        set -euo pipefail
        echo "--- Checking Text Injection Dependencies ---"
        
        # Tools needed for text_injection_tests job
        text_injection_tools="xdotool Xvfb openbox dbus-launch wl-paste xclip ydotool xprop wmctrl"
        
        missing=0
        for cmd in $text_injection_tools; do
          if ! command -v "$cmd" &> /dev/null; then
            echo "::warning::Text injection tool '$cmd' not found. Some tests may be skipped."
            missing=1
          fi
        done
        
        # Check for X11/accessibility libraries
        text_injection_pkgs="gtk+-3.0 at-spi-2.0 xtst"
        for pkg in $text_injection_pkgs; do
            if ! pkg-config --exists "$pkg"; then
                echo "::warning::Text injection library '$pkg' not found. Some tests may be skipped."
                missing=1
            fi
        done
        
        if [[ $missing -ne 0 ]]; then
          echo "⚠️ Some text injection dependencies missing. Tests will adapt."
        else
          echo "✅ All text injection dependencies available"
        fi

    - name: Setup Rust toolchain
      if: inputs.skip-toolchain != 'true'
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        key: "nobara-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
