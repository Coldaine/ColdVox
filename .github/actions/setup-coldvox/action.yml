name: Setup ColdVox Dependencies
description: Install system deps, libvosk, and Rust toolchain
inputs:
  skip-toolchain:
    description: Skip Rust toolchain setup (for jobs with custom toolchain)
    required: false
    default: "false"
runs:
  using: composite
  steps:
    - name: Install system dependencies
      shell: bash
      run: |
        set -euo pipefail
        echo "--- Installing System Dependencies ---"

        # Detect package manager
        if command -v dnf &> /dev/null; then
          PKG_MANAGER="dnf"
          PKG_INSTALL="sudo dnf install -y"
          DEVEL_SUFFIX="-devel"
        elif command -v apt-get &> /dev/null; then
          PKG_MANAGER="apt-get"
          PKG_INSTALL="sudo apt-get update && sudo apt-get install -y"
          DEVEL_SUFFIX="-dev"
        else
          echo "::error::Unsupported package manager. Only dnf and apt-get are supported."
          exit 1
        fi

        echo "Detected package manager: $PKG_MANAGER"

        # Install missing command-line tools
        missing_tools=()
        for cmd in xdotool wget unzip gcc g++ make Xvfb openbox dbus-launch wl-paste xclip ydotool xprop wmctrl pkg-config; do
          if ! command -v "$cmd" &> /dev/null; then
            echo "Missing: $cmd"
            case "$cmd" in
              g++) missing_tools+=("gcc-c++") ;;
              wl-paste) missing_tools+=("wl-clipboard") ;;
              dbus-launch) missing_tools+=("dbus-x11") ;;
              Xvfb) missing_tools+=("xorg-x11-server-Xvfb") ;;
              *) missing_tools+=("$cmd") ;;
            esac
          fi
        done

        # Special handling for pulseaudio/pipewire
        # Modern systems use pipewire-pulseaudio which provides PA compatibility
        if ! command -v pulseaudio &> /dev/null && ! command -v pactl &> /dev/null; then
          echo "Missing: audio system (pulseaudio or pipewire-pulse)"
          if [ "$PKG_MANAGER" = "dnf" ]; then
            missing_tools+=("pipewire-pulseaudio")
          else
            missing_tools+=("pipewire-pulse")
          fi
        else
          echo "✓ Audio system present (pulseaudio or pipewire)"
        fi

        # Install missing development libraries
        missing_libs=()
        for pkg in alsa gtk+-3.0 at-spi-2.0 xtst; do
          if ! pkg-config --exists "$pkg"; then
            echo "Missing library: $pkg"
            case "$pkg" in
              alsa) missing_libs+=("alsa-lib${DEVEL_SUFFIX}") ;;
              gtk+-3.0) missing_libs+=("gtk3${DEVEL_SUFFIX}") ;;
              at-spi-2.0) missing_libs+=("at-spi2-core${DEVEL_SUFFIX}") ;;
              xtst) missing_libs+=("libXtst${DEVEL_SUFFIX}") ;;
            esac
          fi
        done

        # Install everything at once
        all_missing=("${missing_tools[@]}" "${missing_libs[@]}")
        if [ ${#all_missing[@]} -gt 0 ]; then
          echo "Installing missing dependencies: ${all_missing[*]}"
          $PKG_INSTALL "${all_missing[@]}" || {
            echo "::warning::Some packages failed to install, but continuing..."
          }
        else
          echo "✓ All dependencies already installed"
        fi

        echo "--- System dependencies ready ---"

    - name: Setup Rust toolchain
      if: inputs.skip-toolchain != 'true'
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        key: "nobara-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
