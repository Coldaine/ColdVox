name: Setup ColdVox Dependencies
description: Install system deps, libvosk, and Rust toolchain
inputs:
  skip-toolchain:
    description: Skip Rust toolchain setup (for jobs with custom toolchain)
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Install system dependencies
      shell: bash
      run: |
        # Detect package manager and install appropriate packages
        if command -v dnf >/dev/null 2>&1; then
          # Fedora/RHEL/Nobara
          sudo dnf install -y --skip-unavailable \
            alsa-lib-devel \
            xdotool \
            libXtst-devel \
            wget \
            unzip \
            @development-tools
        elif command -v apt-get >/dev/null 2>&1; then
          # Ubuntu/Debian
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libxdo-dev \
            libxtst-dev \
            wget \
            unzip \
            build-essential
        else
          echo "ERROR: Unsupported package manager" >&2
          exit 1
        fi

    - name: Validate libvosk installation
      shell: bash
      run: |
        echo "Validating pre-installed libvosk..."
        if [ ! -f "/usr/local/lib/libvosk.so" ]; then
          echo "⚠️  libvosk.so not found, downloading and installing..."
          
          # Download and extract libvosk
          wget -q -O libvosk.zip "https://github.com/alphacep/vosk-api/releases/download/v0.3.45/vosk-linux-x86_64-0.3.45.zip"
          unzip -q libvosk.zip
          
          # Install libvosk
          sudo cp vosk-linux-x86_64-0.3.45/libvosk.so /usr/local/lib/
          sudo cp -r vosk-linux-x86_64-0.3.45/include/* /usr/local/include/ 2>/dev/null || true
          
          # Clean up
          rm -rf vosk-linux-x86_64-0.3.45 libvosk.zip
          
          # Update linker cache
          sudo ldconfig
          
          echo "✅ Downloaded and installed libvosk"
        else
          echo "✅ Found pre-installed libvosk"
        fi
        
        if [ ! -f "/usr/local/include/vosk_api.h" ]; then
          echo "⚠️  vosk_api.h not found, downloading headers..."
          
          # Download headers if not present
          wget -q -O vosk-headers.zip "https://github.com/alphacep/vosk-api/releases/download/v0.3.45/vosk-linux-x86_64-0.3.45.zip"
          unzip -q vosk-headers.zip
          sudo cp -r vosk-linux-x86_64-0.3.45/include/* /usr/local/include/ 2>/dev/null || true
          rm -rf vosk-linux-x86_64-0.3.45 vosk-headers.zip
          
          echo "✅ Downloaded vosk headers"
        fi
        
        # Ensure libvosk is in dynamic linker cache
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        if ! ldconfig -p | grep -q vosk; then
          echo "🔄 Refreshing linker cache for libvosk..."
          sudo ldconfig
        fi
        
        echo "✅ libvosk available at /usr/local/lib/libvosk.so"
        echo "✅ libvosk cached in dynamic linker"

    - name: Setup Rust toolchain
      if: inputs.skip-toolchain != 'true'
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        key: "nobara-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
        restore-keys: |
          nobara-${{ runner.os }}-
