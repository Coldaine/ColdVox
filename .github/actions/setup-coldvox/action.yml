name: Setup ColdVox Dependencies
description: Install system deps, libvosk, and Rust toolchain
inputs:
  skip-toolchain:
    description: Skip Rust toolchain setup (for jobs with custom toolchain)
    required: false
    default: "false"
runs:
  using: composite
  steps:
    - name: Verify provisioned system dependencies
      shell: bash
      run: |
        set -euo pipefail
        echo "--- Verifying Provisioned System Dependencies ---"

        # List of essential commands the runner MUST have
        # This replaces the sudo dnf/apt install commands
        # Core tools (present on both X11/Wayland setups)
        required_commands="xdotool wget unzip gcc g++ make Xvfb dbus-launch wl-paste xclip ydotool xprop wmctrl pkg-config"

        # Window manager: require at least one of these
        wm_candidates=(openbox fluxbox)

        # Audio stack: require at least one control/daemon present (PipeWire or PulseAudio envs)
        audio_candidates=(pactl pulseaudio pipewire pw-cli)

        failed=0
        echo "Checking for required commands..."
        for cmd in $required_commands; do
          if ! command -v "$cmd" &> /dev/null; then
            echo "::error::Required command '$cmd' not found on runner. Please provision the runner with this dependency."
            failed=1
          fi
        done

        echo "Checking for a window manager (openbox|fluxbox)..."
        wm_found=0
        for wm in "${wm_candidates[@]}"; do
          if command -v "$wm" &>/dev/null; then
            wm_found=1
            break
          fi
        done
        if [[ $wm_found -eq 0 ]]; then
          echo "::error::No supported window manager found (expected one of: ${wm_candidates[*]}). Please provision one."
          failed=1
        fi

        echo "Checking for audio control/daemon (pactl|pulseaudio|pipewire|pw-cli)..."
        audio_found=0
        for ac in "${audio_candidates[@]}"; do
          if command -v "$ac" &>/dev/null; then
            audio_found=1
            break
          fi
        done
        if [[ $audio_found -eq 0 ]]; then
          echo "::error::No audio control/daemon found (expected one of: ${audio_candidates[*]}). Please install PipeWire or PulseAudio tooling."
          failed=1
        fi

        # Check for pkg-config dependencies (for -devel packages)
        # atspi module name is 'atspi-2' (provided by at-spi2-core-devel / libatspi)
        required_pkgs="alsa gtk+-3.0 atspi-2 xtst"
        echo "Checking for required libraries via pkg-config..."
        for pkg in $required_pkgs; do
          if ! pkg-config --exists "$pkg"; then
            echo "::error::Required library '$pkg' not found by pkg-config. Please install the corresponding -devel package on the runner."
            failed=1
          fi
        done

        if [[ $failed -ne 0 ]]; then
          echo "::error::One or more system dependencies are missing. Please provision the runner correctly."
          exit 1
        fi

        echo "--- All system dependencies are correctly provisioned. ---"

    - name: Setup Rust toolchain
      if: inputs.skip-toolchain != 'true'
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        key: "nobara-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
