name: Setup ColdVox Dependencies
description: Install system deps, libvosk, and Rust toolchain
inputs:
  skip-toolchain:
    description: Skip Rust toolchain setup (for jobs with custom toolchain)
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Install comprehensive system dependencies
      shell: bash
      run: |
        # Detect package manager and install ALL required packages
        if command -v dnf >/dev/null 2>&1; then
          # Fedora/RHEL/Nobara - comprehensive package list
          sudo dnf install -y --skip-unavailable \
            alsa-lib-devel \
            xdotool \
            libXtst-devel \
            wget \
            unzip \
            @development-tools \
            xorg-x11-server-Xvfb \
            openbox \
            dbus-x11 \
            at-spi2-core \
            wl-clipboard \
            xclip \
            ydotool \
            xorg-x11-utils \
            wmctrl \
            gtk3-devel \
            pulseaudio
        elif command -v apt-get >/dev/null 2>&1; then
          # Ubuntu/Debian - comprehensive package list
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libxdo-dev \
            libxtst-dev \
            wget \
            unzip \
            build-essential \
            xvfb \
            openbox \
            dbus-x11 \
            at-spi2-core \
            wl-clipboard \
            xclip \
            ydotool \
            x11-utils \
            wmctrl \
            libgtk-3-dev \
            pulseaudio
        else
          echo "ERROR: Unsupported package manager" >&2
          exit 1
        fi

    - name: Validate libvosk installation (fail-fast, no download)
      shell: bash
      run: |
        set -euo pipefail
        echo "Validating provisioned libvosk (no network fetch allowed)..."
        if [ ! -f "/usr/local/lib/libvosk.so" ]; then
          echo "❌ libvosk.so NOT found at /usr/local/lib/libvosk.so" >&2
          echo "This runner is expected to have libvosk pre-installed (cache-as-contract)." >&2
          exit 1
        fi
        if [ ! -f "/usr/local/include/vosk_api.h" ]; then
          echo "⚠️  vosk_api.h header not found; builds may still work if vendored bindings are sufficient." >&2
        fi
        # Refresh ldconfig just in case (ignore failure)
        if command -v sudo >/dev/null 2>&1; then
          sudo ldconfig || true
        fi
        if ! ldconfig -p | grep -q vosk; then
          echo "ℹ️  libvosk not visible in ldconfig output; continuing (dlopen by path should still work)." >&2
        fi
        echo "✅ libvosk present: /usr/local/lib/libvosk.so"

    - name: Setup Rust toolchain
      if: inputs.skip-toolchain != 'true'
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        key: "nobara-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
        restore-keys: |
          nobara-${{ runner.os }}-
