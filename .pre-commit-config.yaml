# Pre-commit hooks for ColdVox
# See https://pre-commit.com for more information
repos:
  # Prettier for YAML formatting (requires Node >= 18 on developer machine)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.3.3
    hooks:
      - id: prettier
        types: [yaml]
        args: [--write]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--config-file, .yamllint.yaml]
        files: \.(yml|yaml)$

  # Check YAML syntax
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
        args: [--unsafe] # Allow custom tags in GitHub Actions
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # GitHub Actions workflow linting
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.4
    hooks:
      - id: actionlint

  # Server-side validation of GitHub workflows via gh CLI
  - repo: local
    hooks:
      - id: gh-validate-workflows
        name: gh validate workflows (server-side)
        language: system
        pass_filenames: false
        entry: |
          bash -euo pipefail -c '
            # Source environment variables from .env file if it exists
            if [[ -f .env ]]; then
              set -o allexport
              source .env
              set +o allexport
            fi
            
            # Default IS_WORKSTATION to false if not set
            IS_WORKSTATION="${IS_WORKSTATION:-false}"
            
            if [[ "${PRECOMMIT_SKIP_GH_VALIDATE:-}" == "1" ]]; then
              echo "Skipping gh workflow validation due to PRECOMMIT_SKIP_GH_VALIDATE=1"
              exit 0
            fi
            
            if [[ "${IS_WORKSTATION}" != "true" ]]; then
              echo "Skipping gh workflow validation on non-workstation machine"
              echo "To run manually: IS_WORKSTATION=true pre-commit run gh-validate-workflows"
              exit 0
            fi

            if ! command -v gh >/dev/null 2>&1; then
              echo "ERROR: gh CLI not found. Install from https://cli.github.com/ and run: gh auth login" >&2
              exit 2
            fi

            if ! gh auth status >/dev/null 2>&1; then
              echo "ERROR: gh CLI is not authenticated. Run: gh auth login" >&2
              exit 2
            fi

            shopt -s nullglob
            files=(.github/workflows/*.yml .github/workflows/*.yaml)
            if [[ ${#files[@]} -eq 0 ]]; then
              echo "No workflow files found locally; skipping."
              exit 0
            fi

            echo "==> Rendering workflow YAMLs from GitHub for HEAD..."
            failed=0
            for wf in "${files[@]}"; do
              echo "-- $wf"
              if ! timeout 15s gh workflow view "$wf" --ref HEAD --yaml >/dev/null 2>&1; then
                echo "ERROR: gh failed to render workflow: $wf (ref HEAD)" >&2
                failed=1
              fi
            done

            if [[ "$failed" -ne 0 ]]; then
              echo "One or more workflows failed server-side validation via gh." >&2
              exit 1
            fi

            echo "All workflows recognized and renderable by GitHub via gh for HEAD."
          '

  # Rust formatting (optional - commented out by default)
  # Uncomment if you want pre-commit to also check Rust formatting
  # - repo: local
  #   hooks:
  #     - id: rustfmt
  #       name: rustfmt
  #       entry: cargo fmt -- --check
  #       language: system
  #       types: [rust]
  #       pass_filenames: false
