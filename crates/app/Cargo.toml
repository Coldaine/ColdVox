[package]
name = "coldvox-app"
version = "0.1.0"
edition = "2021"
default-run = "coldvox"

[[bin]]
name = "coldvox"
path = "src/main.rs"

[[bin]]
name = "tui_dashboard"
path = "src/bin/tui_dashboard.rs"

[[bin]]
name = "mic_probe"
path = "src/bin/mic_probe.rs"

[[example]]
name = "foundation_probe"
path = "../../examples/foundation_probe.rs"
required-features = ["examples"]


[[example]]
name = "record_10s"
path = "../../examples/record_10s.rs"
required-features = ["examples"]

[[example]]
name = "vosk_test"
path = "../../examples/vosk_test.rs"
required-features = ["vosk", "examples"]

[[example]]
name = "inject_demo"
path = "../../examples/inject_demo.rs"
required-features = ["text-injection"]

[[example]]
name = "test_hotkey_backend"
path = "../../examples/test_hotkey_backend.rs"
required-features = ["examples"]

[[example]]
name = "test_kglobalaccel_hotkey"
path = "../../examples/test_kglobalaccel_hotkey.rs"
required-features = ["examples"]

[[example]]
name = "test_silero_wav"
path = "../../examples/test_silero_wav.rs"
required-features = ["examples"]

[[example]]
name = "device_hotplug_demo"
path = "../../examples/device_hotplug_demo.rs"
required-features = ["examples"]

[dependencies]
zbus = { version = "5.11.0" }
tokio = { version = "1", features = ["full"] }
anyhow = "1.0"
thiserror = "2.0"
tracing = "0.1"
parking_lot = "0.12"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-appender = "0.2"
async-trait = "0.1"
# Some audio processing dependencies still needed for VAD adapter
hound = "3.5"
rubato = "0.16"
crossbeam-channel = "0.5"
# parking_lot moved to foundation and other crates
once_cell = "1.19"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
clap = { version = "4.0", features = ["derive", "env"] }
env_logger = "0.11"
chrono = { version = "0.4", features = ["serde"] }
ratatui = "0.28"
crossterm = "0.28"
futures = "0.3"
fastrand = "2.0"
# voice_activity_detector moved to coldvox-vad-silero
coldvox-foundation = { path = "../coldvox-foundation" }
coldvox-telemetry = { path = "../coldvox-telemetry" }
coldvox-audio = { path = "../coldvox-audio" }
coldvox-vad = { path = "../coldvox-vad" }
coldvox-vad-silero = { path = "../coldvox-vad-silero", features = ["silero"] }
coldvox-stt = { path = "../coldvox-stt" }
coldvox-stt-vosk = { path = "../coldvox-stt-vosk", optional = true, features = ["vosk"] }
# Note: coldvox-text-injection is now specified in target-specific sections below
# to automatically enable platform-appropriate backends
csv = "1.3"
# device_query = "4.0" # Removed: unused dependency
cpal = "0.16.0"

[dev-dependencies]
tempfile = "3.22"
mockall = "0.12"
tokio-test = "0.4"
ctrlc = "3.5"
proptest = "1.4"
rand = "0.8"

[features]
default = ["silero", "vosk", "text-injection"]
live-hardware-tests = []
vosk = ["dep:coldvox-stt-vosk"]
whisper = ["coldvox-stt/whisper"]
no-stt = []
examples = []
text-injection = ["dep:coldvox-text-injection"]  # Enables platform-specific dependency
silero = ["coldvox-vad-silero/silero"]
sleep-observer = []

text-injection-atspi = ["text-injection", "coldvox-text-injection/atspi"]
text-injection-clipboard = ["text-injection", "coldvox-text-injection/wl_clipboard"]
text-injection-ydotool = ["text-injection", "coldvox-text-injection/ydotool"]
text-injection-enigo = ["text-injection", "coldvox-text-injection/enigo"]

text-injection-kdotool = ["text-injection", "coldvox-text-injection/kdotool"]
text-injection-regex = ["text-injection", "coldvox-text-injection/regex"]

# Platform-specific dependencies for Linux
[target.'cfg(target_os = "linux")'.dependencies]
coldvox-text-injection = { path = "../coldvox-text-injection", features = ["atspi", "wl_clipboard", "ydotool"], optional = true }

# Platform-specific dependencies for Windows
[target.'cfg(target_os = "windows")'.dependencies]
coldvox-text-injection = { path = "../coldvox-text-injection", features = ["enigo"], optional = true }

# Platform-specific dependencies for macOS
[target.'cfg(target_os = "macos")'.dependencies]
coldvox-text-injection = { path = "../coldvox-text-injection", features = ["enigo"], optional = true }
